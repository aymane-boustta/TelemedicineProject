/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIPatient;

import IOText.InputText;
import Pojos.Patient;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import java.util.Date;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author diego
 */
public class PatientFormFrame extends javax.swing.JFrame {

    Patient patient = null;
    InputText inputText = new InputText();
    String codedPassword = "";

    // MI SOCKET, INPUTSTREAM, LO QUE NECESITE...
    public PatientFormFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JTextField();
        addressLabel = new javax.swing.JTextField();
        surnameField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        dobLabel = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        ageLabel = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        sexLabel = new javax.swing.JTextField();
        dobChooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        sexeField = new javax.swing.JTextField();
        doctorLabel = new javax.swing.JTextField();
        doctorField = new javax.swing.JTextField();
        datosIntroducidosOK = new javax.swing.JLabel();
        paswordLabel = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameLabel.setEditable(false);
        nameLabel.setText("Name:");
        nameLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameLabelActionPerformed(evt);
            }
        });

        surnameLabel.setEditable(false);
        surnameLabel.setText("Surname:");
        surnameLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameLabelActionPerformed(evt);
            }
        });

        addressLabel.setEditable(false);
        addressLabel.setText("Address:");
        addressLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressLabelActionPerformed(evt);
            }
        });

        surnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameFieldActionPerformed(evt);
            }
        });

        dobLabel.setEditable(false);
        dobLabel.setText("Date of Birth:");
        dobLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobLabelActionPerformed(evt);
            }
        });

        addressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFieldActionPerformed(evt);
            }
        });

        emailLabel.setEditable(false);
        emailLabel.setText("Email:");
        emailLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailLabelActionPerformed(evt);
            }
        });

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        ageLabel.setEditable(false);
        ageLabel.setText("Age:");
        ageLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageLabelActionPerformed(evt);
            }
        });

        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });

        sexLabel.setEditable(false);
        sexLabel.setText("Sex:");
        sexLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexLabelActionPerformed(evt);
            }
        });

        dobChooser.setName("dobChooser"); // NOI18N

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sexeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexeFieldActionPerformed(evt);
            }
        });

        doctorLabel.setEditable(false);
        doctorLabel.setText("Doctor:");
        doctorLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorLabelActionPerformed(evt);
            }
        });

        doctorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorFieldActionPerformed(evt);
            }
        });

        paswordLabel.setEditable(false);
        paswordLabel.setText("Pasword: ");
        paswordLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paswordLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(98, 98, 98))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(emailField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(surnameField)
                            .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(dobChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(addressField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(paswordLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(doctorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexeField)
                            .addComponent(ageField)
                            .addComponent(doctorField)
                            .addComponent(txtPassword))))
                .addGap(117, 117, 117)
                .addComponent(datosIntroducidosOK, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datosIntroducidosOK))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jButton1)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameLabelActionPerformed

    private void surnameLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnameLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_surnameLabelActionPerformed

    private void addressLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressLabelActionPerformed

    private void surnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_surnameFieldActionPerformed

    private void dobLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobLabelActionPerformed

    private void addressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFieldActionPerformed

    private void emailLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailLabelActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void ageLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageLabelActionPerformed

    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void sexLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexLabelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //create the patient
        String nameLabel = nameField.getText();
        String surnameLabel = surnameField.getText();
        Date dobLabel = dobChooser.getDate();
        String addressLabel = addressField.getText();
        String emailLabel = emailField.getText();
        Integer ageLabel = Integer.parseInt(ageField.getText());
        String sexeLabel = sexeField.getText();
        String doctorLabel = doctorField.getText();
        this.patient = new Patient(nameLabel, surnameLabel, dobLabel, addressLabel, emailLabel, ageLabel, sexeLabel, doctorLabel);

        //get the password created
        String secretKey = "had";
        String password = txtPassword.getText();
        String encodedPassword = encodePassword(secretKey, password);
        System.out.println(encodedPassword);
        String deencodedPassword = decodePassword(secretKey, encodedPassword);
        System.out.println(deencodedPassword);

        //The data has been introduced correctly messageText
        datosIntroducidosOK.setText("The data has been introduced correctly");

        //Clean the fields
        nameField.setText("");
        surnameField.setText("");
        dobChooser.setDate(null);
        addressField.setText("");
        emailField.setText("");
        ageField.setText("");
        sexeField.setText("");
        txtPassword.setText("");

        //Write the Patient and Passord in a .txt
        inputText.inputPatientDataText(patient);
        inputText.inputPassword(encodedPassword, nameLabel);
        System.out.println(patient);

        // OK, DATOS ENVIADOS, REDIRECCION, etc...
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sexeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexeFieldActionPerformed

    private void doctorLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorLabelActionPerformed

    private void doctorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorFieldActionPerformed

    private void paswordLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paswordLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paswordLabelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientFormFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // iniciar la conexion
                new PatientFormFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JTextField addressLabel;
    private javax.swing.JTextField ageField;
    private javax.swing.JTextField ageLabel;
    private javax.swing.JLabel datosIntroducidosOK;
    private com.toedter.calendar.JDateChooser dobChooser;
    private javax.swing.JTextField dobLabel;
    private javax.swing.JTextField doctorField;
    private javax.swing.JTextField doctorLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField emailLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nameLabel;
    private javax.swing.JTextField paswordLabel;
    private javax.swing.JTextField sexLabel;
    private javax.swing.JTextField sexeField;
    private javax.swing.JTextField surnameField;
    private javax.swing.JTextField surnameLabel;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

    public String encodePassword(String key, String cadena) {
        String encription = "";
        try {
            MessageDigest md5 = MessageDigest.getInstance("MD5");
            byte[] keyPassword = md5.digest(key.getBytes("utf-8"));//utf in case there are dashe or something other than characters
            byte[] copyKeyPassword = Arrays.copyOf(keyPassword, 24);
            SecretKey secretKey = new SecretKeySpec(copyKeyPassword, "DESede");
            Cipher cipher = Cipher.getInstance("DESede");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);

            //encrptacion
            byte[] bytePassword = cadena.getBytes("utf-8");
            byte[] buffer = cipher.doFinal(bytePassword);
            byte[] base64Bytes = Base64.getEncoder().encode(buffer);
            encription = new String(base64Bytes);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
        }
        return encription;
    }

    public String decodePassword(String key, String encriptedStrig) {
        String decoded = "";
        try {
            byte[] password = Base64.getDecoder().decode(encriptedStrig.getBytes("utf-8"));
            MessageDigest md5 = MessageDigest.getInstance("MD5");//tipo de encriptacion
            byte[] digestOfPassword = md5.digest(key.getBytes("utf-8"));
            byte[] copydigestOfPassword = Arrays.copyOf(digestOfPassword, 24);
            SecretKey secretKey = new SecretKeySpec(copydigestOfPassword, "DESede");
            Cipher decipher = Cipher.getInstance("DESede");
            decipher.init(Cipher.DECRYPT_MODE, secretKey);

            //desencryptado
            byte[] bytePassword = decipher.doFinal(password);
            decoded = new String(bytePassword, "utf-8");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
        }
        return decoded;
    }

}
